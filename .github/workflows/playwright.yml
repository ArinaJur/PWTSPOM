name: User App Tests
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: 'Run Tests'
    timeout-minutes: 20
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [ '22.12.0', '20.18.1' ]
        report-on-node: [ '22' ]

    steps:
    - name: Clone project
      uses: actions/checkout@v4

    - name: SetUp Node ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Install Playwright Browsers
      run: npx playwright install --with-deps

    - name: Run Playwright tests Node version ${{ matrix.node-version }}
      run: npx playwright test
      env:
        URL: ${{ secrets.URL}}
        CI_RUN: true

    - name: Attach Playwright report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: html-report
        path: reports/html-report/
        retention-days: 30

    - name: Attach JUnit report Node version ${{ matrix.report-on-node }}
      uses: actions/upload-artifact@v4
      if: ${{ matrix.node-version == '22.12.0' }}
      with:
        name: junit-report-${{ matrix.report-on-node }}
        path: reports/junit-report/test-results-${{ matrix.report-on-node }}.xml
        retention-days: 30

    - name: Create TestRun Report
      uses: dorny/test-reporter@v1.9.1
      if: success() || failure()
      with:
        name: JUnit Tests
        artifact: junit-report-${{ matrix.report-on-node }}
        path: '*.xml'
        reporter: jest-junit